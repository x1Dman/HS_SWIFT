//
//  AuthScreenPresenter.swift
//  HearthstoneLegendaryAPI
//
//  Created by 18579118 on 24.08.2020.
//  Copyright (c) 2020 18579118. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class AuthScreenPresenter {
    
    // MARK: - Private properties -
    
    private unowned let view: AuthScreenViewInterface
    private let interactor: AuthScreenInteractorInterface
    private let wireframe: AuthScreenWireframeInterface
    private let store: Storable
    // MARK: - Lifecycle -
    
    init(view: AuthScreenViewInterface, interactor: AuthScreenInteractorInterface, wireframe: AuthScreenWireframeInterface, store: Storable = CredentialsManager()) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.store = store
    }
}

// MARK: - Extensions -

extension AuthScreenPresenter: AuthScreenPresenterInterface {
    var count: Int {
        interactor.heroes.count
    }
    
    func configureCell(index: Int, cell: AuthScreenViewCellInterface) {
        let className = interactor.heroes[index].className
        let imagePath = interactor.heroes[index].path
        cell.setup(with: className, imagePath: imagePath)
    }
    
    func authAndPrepareToShow() {
        print("Start spin")
        wireframe.startLoading()
        interactor.auth { data, status in
            self.view.setupView()
            self.wireframe.stopLoading(with: status)
        }
    }
    
    func viewTapped(by index: Int) {
        let heroClassName = interactor.heroes[index].apiClassName
        wireframe.moveToCards(by: heroClassName)
    }
}
