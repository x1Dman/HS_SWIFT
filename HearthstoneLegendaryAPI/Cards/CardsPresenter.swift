//
//  CardsPresenter.swift
//  HearthstoneLegendaryAPI
//
//  Created by 18579118 on 29.07.2020.
//  Copyright (c) 2020 18579118. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import UIKit

final class CardsPresenter {

    // MARK: - Private properties -
    // view
    private unowned let viewCell: CardsCollectionViewCellProtocol
    private unowned let view: CardsCollectionViewProtocol
    
    private let interactor: CardsInteractorProtocol
    private let wireframe: CardsWireframeProtocol
    private var cells: [UICollectionViewCell] = []
    NotificationCenter.default.addObserver(
        self,
        selector: #selector(refreshData),
        name: NSNotification.Name("dataWasDownloaded"),
        object: nil
    )
    
    @objc private func refreshData(notification: NSNotification) {
        
    }

    // MARK: - Lifecycle -

    init(view: CardsCollectionViewProtocol, interactor: CardsInteractorProtocol, wireframe: CardsWireframeProtocol, viewCell: CardCollectionViewCell) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.viewCell = viewCell
    }
}

// MARK: - Extensions -

extension CardsPresenter: CardsPresenterProtocol {
    
    func configureView() {
        // fetch data
        interactor.fetchData()
        // setup view
        view.setView()
        view.setConstraints()
        
        // setupViewCell
//        viewCell.setViewCell()
//        viewCell.setConstraintsCell()
    }
    
    // sending message to router that this view should be closed
    func viewTapped() {
        wireframe.closeCurrentViewController()
    }
}
